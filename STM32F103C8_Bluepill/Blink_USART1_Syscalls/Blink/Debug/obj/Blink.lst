   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"syscalls.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._sbrk,"ax",%progbits
  19              		.align	2
  20              		.global	_sbrk
  21              		.thumb
  22              		.thumb_func
  24              	_sbrk:
  25              	.LFB56:
  26              		.file 1 "C:\\Users\\Uporabnik\\Documents\\CooCox\\STM32F103\\Blink_USART1_test\\syscalls\\syscalls
   1:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** /**************************************************************************//*****
   2:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****  * @file     stdio.c
   3:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****  * @brief    Implementation of newlib syscall
   4:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****  ********************************************************************************/
   5:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
   6:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #include <stdio.h>
   7:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #include <stdarg.h>
   8:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #include <sys/types.h>
   9:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #include <sys/stat.h>
  10:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  11:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #include <stm32f10x_usart.h>
  12:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  13:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #undef errno
  14:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** extern int errno;
  15:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** extern int  _end;
  16:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  17:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  18:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  19:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  20:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** /*This function is used for handle heap option*/
  21:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  22:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** caddr_t _sbrk ( int incr )
  23:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
  27              		.loc 1 23 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  24:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     static unsigned char *heap = NULL;
  25:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     unsigned char *prev_heap;
  26:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  27:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     if (heap == NULL) {
  40              		.loc 1 27 0
  41 0008 0B4B     		ldr	r3, .L4
  42 000a 1B68     		ldr	r3, [r3]
  43 000c 002B     		cmp	r3, #0
  44 000e 02D1     		bne	.L2
  28:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****         heap = (unsigned char *)&_end;
  45              		.loc 1 28 0
  46 0010 094B     		ldr	r3, .L4
  47 0012 0A4A     		ldr	r2, .L4+4
  48 0014 1A60     		str	r2, [r3]
  49              	.L2:
  29:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     }
  30:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     prev_heap = heap;
  50              		.loc 1 30 0
  51 0016 084B     		ldr	r3, .L4
  52 0018 1B68     		ldr	r3, [r3]
  53 001a FB60     		str	r3, [r7, #12]
  31:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  32:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     heap += incr;
  54              		.loc 1 32 0
  55 001c 064B     		ldr	r3, .L4
  56 001e 1A68     		ldr	r2, [r3]
  57 0020 7B68     		ldr	r3, [r7, #4]
  58 0022 1A44     		add	r2, r2, r3
  59 0024 044B     		ldr	r3, .L4
  60 0026 1A60     		str	r2, [r3]
  33:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  34:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return (caddr_t) prev_heap;
  61              		.loc 1 34 0
  62 0028 FB68     		ldr	r3, [r7, #12]
  35:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
  63              		.loc 1 35 0
  64 002a 1846     		mov	r0, r3
  65 002c 1437     		adds	r7, r7, #20
  66 002e BD46     		mov	sp, r7
  67              		@ sp needed
  68 0030 5DF8047B 		ldr	r7, [sp], #4
  69 0034 7047     		bx	lr
  70              	.L5:
  71 0036 00BF     		.align	2
  72              	.L4:
  73 0038 00000000 		.word	heap.5925
  74 003c 00000000 		.word	_end
  75              		.cfi_endproc
  76              	.LFE56:
  78              		.section	.text.link,"ax",%progbits
  79              		.align	2
  80              		.global	link
  81              		.thumb
  82              		.thumb_func
  84              	link:
  85              	.LFB57:
  36:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  37:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  38:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int link(char *old, char *new)
  39:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
  86              		.loc 1 39 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 8
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 7, -4
  94 0002 83B0     		sub	sp, sp, #12
  95              		.cfi_def_cfa_offset 16
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  98 0006 7860     		str	r0, [r7, #4]
  99 0008 3960     		str	r1, [r7]
  40:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return -1;
 100              		.loc 1 40 0
 101 000a 4FF0FF33 		mov	r3, #-1
  41:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 102              		.loc 1 41 0
 103 000e 1846     		mov	r0, r3
 104 0010 0C37     		adds	r7, r7, #12
 105 0012 BD46     		mov	sp, r7
 106              		@ sp needed
 107 0014 5DF8047B 		ldr	r7, [sp], #4
 108 0018 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE57:
 112 001a 00BF     		.section	.text._close,"ax",%progbits
 113              		.align	2
 114              		.global	_close
 115              		.thumb
 116              		.thumb_func
 118              	_close:
 119              	.LFB58:
  42:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  43:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  44:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int _close(int file)
  45:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 120              		.loc 1 45 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              		.cfi_def_cfa_offset 4
 127              		.cfi_offset 7, -4
 128 0002 83B0     		sub	sp, sp, #12
 129              		.cfi_def_cfa_offset 16
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 132 0006 7860     		str	r0, [r7, #4]
  46:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return -1;
 133              		.loc 1 46 0
 134 0008 4FF0FF33 		mov	r3, #-1
  47:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 135              		.loc 1 47 0
 136 000c 1846     		mov	r0, r3
 137 000e 0C37     		adds	r7, r7, #12
 138 0010 BD46     		mov	sp, r7
 139              		@ sp needed
 140 0012 5DF8047B 		ldr	r7, [sp], #4
 141 0016 7047     		bx	lr
 142              		.cfi_endproc
 143              	.LFE58:
 145              		.section	.text._fstat,"ax",%progbits
 146              		.align	2
 147              		.global	_fstat
 148              		.thumb
 149              		.thumb_func
 151              	_fstat:
 152              	.LFB59:
  48:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  49:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  50:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int _fstat(int file, struct stat *st)
  51:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 153              		.loc 1 51 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 1, uses_anonymous_args = 0
 157              		@ link register save eliminated.
 158 0000 80B4     		push	{r7}
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              		.cfi_def_cfa_offset 16
 163 0004 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 166 0008 3960     		str	r1, [r7]
  52:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     st->st_mode = S_IFCHR;
 167              		.loc 1 52 0
 168 000a 3B68     		ldr	r3, [r7]
 169 000c 4FF40052 		mov	r2, #8192
 170 0010 5A60     		str	r2, [r3, #4]
  53:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return 0;
 171              		.loc 1 53 0
 172 0012 0023     		movs	r3, #0
  54:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 173              		.loc 1 54 0
 174 0014 1846     		mov	r0, r3
 175 0016 0C37     		adds	r7, r7, #12
 176 0018 BD46     		mov	sp, r7
 177              		@ sp needed
 178 001a 5DF8047B 		ldr	r7, [sp], #4
 179 001e 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE59:
 183              		.section	.text._isatty,"ax",%progbits
 184              		.align	2
 185              		.global	_isatty
 186              		.thumb
 187              		.thumb_func
 189              	_isatty:
 190              	.LFB60:
  55:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  56:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  57:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int _isatty(int file)
  58:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 191              		.loc 1 58 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 8
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196 0000 80B4     		push	{r7}
 197              		.cfi_def_cfa_offset 4
 198              		.cfi_offset 7, -4
 199 0002 83B0     		sub	sp, sp, #12
 200              		.cfi_def_cfa_offset 16
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
  59:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return 1;
 204              		.loc 1 59 0
 205 0008 0123     		movs	r3, #1
  60:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 206              		.loc 1 60 0
 207 000a 1846     		mov	r0, r3
 208 000c 0C37     		adds	r7, r7, #12
 209 000e BD46     		mov	sp, r7
 210              		@ sp needed
 211 0010 5DF8047B 		ldr	r7, [sp], #4
 212 0014 7047     		bx	lr
 213              		.cfi_endproc
 214              	.LFE60:
 216 0016 00BF     		.section	.text._lseek,"ax",%progbits
 217              		.align	2
 218              		.global	_lseek
 219              		.thumb
 220              		.thumb_func
 222              	_lseek:
 223              	.LFB61:
  61:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  62:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  63:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int _lseek(int file, int ptr, int dir)
  64:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 224              		.loc 1 64 0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 16
 227              		@ frame_needed = 1, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229 0000 80B4     		push	{r7}
 230              		.cfi_def_cfa_offset 4
 231              		.cfi_offset 7, -4
 232 0002 85B0     		sub	sp, sp, #20
 233              		.cfi_def_cfa_offset 24
 234 0004 00AF     		add	r7, sp, #0
 235              		.cfi_def_cfa_register 7
 236 0006 F860     		str	r0, [r7, #12]
 237 0008 B960     		str	r1, [r7, #8]
 238 000a 7A60     		str	r2, [r7, #4]
  65:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return 0;
 239              		.loc 1 65 0
 240 000c 0023     		movs	r3, #0
  66:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 241              		.loc 1 66 0
 242 000e 1846     		mov	r0, r3
 243 0010 1437     		adds	r7, r7, #20
 244 0012 BD46     		mov	sp, r7
 245              		@ sp needed
 246 0014 5DF8047B 		ldr	r7, [sp], #4
 247 0018 7047     		bx	lr
 248              		.cfi_endproc
 249              	.LFE61:
 251 001a 00BF     		.section	.text._read,"ax",%progbits
 252              		.align	2
 253              		.global	_read
 254              		.thumb
 255              		.thumb_func
 257              	_read:
 258              	.LFB62:
  67:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  68:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** /*Low layer read(input) function*/
  69:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
  70:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int _read(int file, char *ptr, int len)
  71:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 259              		.loc 1 71 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 24
 262              		@ frame_needed = 1, uses_anonymous_args = 0
 263 0000 90B5     		push	{r4, r7, lr}
 264              		.cfi_def_cfa_offset 12
 265              		.cfi_offset 4, -12
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 87B0     		sub	sp, sp, #28
 269              		.cfi_def_cfa_offset 40
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 F860     		str	r0, [r7, #12]
 273 0008 B960     		str	r1, [r7, #8]
 274 000a 7A60     		str	r2, [r7, #4]
  72:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  73:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #if 0
  74:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      //user code example
  75:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      int i;
  76:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      (void)file;
  77:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  78:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      for(i = 0; i < len; i++)
  79:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      {
  80:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****         // UART_GetChar is user's basic input function
  81:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****         *ptr++ = UART_GetChar();
  82:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      }
  83:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  84:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #endif
  85:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** /*
  86:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //	int i;
  87:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	int num = 0;
  88:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	(void)file;
  89:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  90:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //	for(i = 0; i < len; i++)
  91:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	{
  92:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //		if (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == (uint16_t)SET) {
  93:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		while (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == (uint16_t)SET) {
  94:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 			*ptr++ = USART_ReceiveData(USART1);
  95:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 			num++;
  96:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		}
  97:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	}
  98:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
  99:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //    return len;
 100:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	if (num == 0)
 101:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		return -1;
 102:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	else
 103:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		return num;
 104:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** */
 105:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 106:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** /*
 107:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	if (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == (uint16_t)SET) {
 108:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		*ptr++ = USART_ReceiveData(USART1);
 109:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	}
 110:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return (1);
 111:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** */
 112:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 113:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 114:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****  	int num = 0;
 275              		.loc 1 114 0
 276 000c 0023     		movs	r3, #0
 277 000e 7B61     		str	r3, [r7, #20]
 115:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //    for(int i = 0; i < len; i++)
 116:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	while (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == (uint16_t)SET) {
 278              		.loc 1 116 0
 279 0010 0AE0     		b	.L17
 280              	.L18:
 117:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		*ptr++ = __io_getchar();
 281              		.loc 1 117 0
 282 0012 BC68     		ldr	r4, [r7, #8]
 283 0014 631C     		adds	r3, r4, #1
 284 0016 BB60     		str	r3, [r7, #8]
 285 0018 FFF7FEFF 		bl	__io_getchar
 286 001c 0346     		mov	r3, r0
 287 001e DBB2     		uxtb	r3, r3
 288 0020 2370     		strb	r3, [r4]
 118:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		num++;
 289              		.loc 1 118 0
 290 0022 7B69     		ldr	r3, [r7, #20]
 291 0024 0133     		adds	r3, r3, #1
 292 0026 7B61     		str	r3, [r7, #20]
 293              	.L17:
 116:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	while (USART_GetFlagStatus(USART1, USART_FLAG_RXNE) == (uint16_t)SET) {
 294              		.loc 1 116 0 discriminator 1
 295 0028 0848     		ldr	r0, .L21
 296 002a 2021     		movs	r1, #32
 297 002c FFF7FEFF 		bl	USART_GetFlagStatus
 298 0030 0346     		mov	r3, r0
 299 0032 012B     		cmp	r3, #1
 300 0034 EDD0     		beq	.L18
 119:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****  	}
 120:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	if (num == 0) num = -1;
 301              		.loc 1 120 0
 302 0036 7B69     		ldr	r3, [r7, #20]
 303 0038 002B     		cmp	r3, #0
 304 003a 02D1     		bne	.L19
 305              		.loc 1 120 0 is_stmt 0 discriminator 1
 306 003c 4FF0FF33 		mov	r3, #-1
 307 0040 7B61     		str	r3, [r7, #20]
 308              	.L19:
 121:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 	return num;
 309              		.loc 1 121 0 is_stmt 1
 310 0042 7B69     		ldr	r3, [r7, #20]
 122:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 311              		.loc 1 122 0
 312 0044 1846     		mov	r0, r3
 313 0046 1C37     		adds	r7, r7, #28
 314 0048 BD46     		mov	sp, r7
 315              		@ sp needed
 316 004a 90BD     		pop	{r4, r7, pc}
 317              	.L22:
 318              		.align	2
 319              	.L21:
 320 004c 00380140 		.word	1073821696
 321              		.cfi_endproc
 322              	.LFE62:
 324              		.section	.text._write,"ax",%progbits
 325              		.align	2
 326              		.global	_write
 327              		.thumb
 328              		.thumb_func
 330              	_write:
 331              	.LFB63:
 123:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 124:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 125:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** /*Low layer write(output) function*/
 126:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
 127:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** int _write(int file, char *ptr, int len)
 128:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 332              		.loc 1 128 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 24
 335              		@ frame_needed = 1, uses_anonymous_args = 0
 336 0000 80B5     		push	{r7, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 7, -8
 339              		.cfi_offset 14, -4
 340 0002 86B0     		sub	sp, sp, #24
 341              		.cfi_def_cfa_offset 32
 342 0004 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 344 0006 F860     		str	r0, [r7, #12]
 345 0008 B960     		str	r1, [r7, #8]
 346 000a 7A60     		str	r2, [r7, #4]
 129:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 130:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #if 0
 131:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      //user code example
 132:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 133:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      int i;
 134:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      (void)file;
 135:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 136:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      for(i = 0; i < len; i++)
 137:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      {
 138:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****         // UART_PutChar is user's basic output function
 139:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****         UART_PutChar(*ptr++);
 140:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      }
 141:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** #endif
 142:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 143:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      int i;
 144:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      (void)file;
 145:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 146:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      for(i = 0; i < len; i++)
 347              		.loc 1 146 0
 348 000c 0023     		movs	r3, #0
 349 000e 7B61     		str	r3, [r7, #20]
 350 0010 09E0     		b	.L24
 351              	.L25:
 147:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      {
 148:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //		while(USART_GetFlagStatus(USART1, USART_FLAG_TC) == (uint16_t)RESET);
 149:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** //		USART_SendData(USART1, *ptr++);
 150:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 		__io_putchar(*ptr++);
 352              		.loc 1 150 0 discriminator 2
 353 0012 BB68     		ldr	r3, [r7, #8]
 354 0014 5A1C     		adds	r2, r3, #1
 355 0016 BA60     		str	r2, [r7, #8]
 356 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 357 001a 1846     		mov	r0, r3
 358 001c FFF7FEFF 		bl	__io_putchar
 146:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      for(i = 0; i < len; i++)
 359              		.loc 1 146 0 discriminator 2
 360 0020 7B69     		ldr	r3, [r7, #20]
 361 0022 0133     		adds	r3, r3, #1
 362 0024 7B61     		str	r3, [r7, #20]
 363              	.L24:
 146:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      for(i = 0; i < len; i++)
 364              		.loc 1 146 0 is_stmt 0 discriminator 1
 365 0026 7A69     		ldr	r2, [r7, #20]
 366 0028 7B68     		ldr	r3, [r7, #4]
 367 002a 9A42     		cmp	r2, r3
 368 002c F1DB     		blt	.L25
 151:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****      }
 152:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 153:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     return len;
 369              		.loc 1 153 0 is_stmt 1
 370 002e 7B68     		ldr	r3, [r7, #4]
 154:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** }
 371              		.loc 1 154 0
 372 0030 1846     		mov	r0, r3
 373 0032 1837     		adds	r7, r7, #24
 374 0034 BD46     		mov	sp, r7
 375              		@ sp needed
 376 0036 80BD     		pop	{r7, pc}
 377              		.cfi_endproc
 378              	.LFE63:
 380              		.section	.text.abort,"ax",%progbits
 381              		.align	2
 382              		.global	abort
 383              		.thumb
 384              		.thumb_func
 386              	abort:
 387              	.LFB64:
 155:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** 
 156:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** __attribute__ ((used))
 157:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** void abort(void)
 158:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c **** {
 388              		.loc 1 158 0
 389              		.cfi_startproc
 390              		@ args = 0, pretend = 0, frame = 0
 391              		@ frame_needed = 1, uses_anonymous_args = 0
 392              		@ link register save eliminated.
 393 0000 80B4     		push	{r7}
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 00AF     		add	r7, sp, #0
 397              		.cfi_def_cfa_register 7
 398              	.L28:
 159:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     /* Abort called */
 160:C:\Users\Uporabnik\Documents\CooCox\STM32F103\Blink_USART1_test\syscalls\syscalls.c ****     while(1);
 399              		.loc 1 160 0 discriminator 1
 400 0004 FEE7     		b	.L28
 401              		.cfi_endproc
 402              	.LFE64:
 404 0006 00BF     		.bss
 405              		.align	2
 406              	heap.5925:
 407 0000 00000000 		.space	4
 408              		.weak	__io_putchar
 409              		.weak	__io_getchar
 410              		.text
 411              	.Letext0:
 412              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\mach
 413              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\sys\
 414              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\sys\
 415              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\sys\
 416              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\4.8 2014q1\\arm-none-eabi\\include\\stdi
 417              		.file 7 "C:\\Users\\Uporabnik\\Documents\\CooCox\\STM32F103\\Blink_USART1_test\\cmsis_boot/stm32f1
 418              		.file 8 "C:\\Users\\Uporabnik\\Documents\\CooCox\\STM32F103\\Blink_USART1_test\\cmsis/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
          syscalls.s:19     .text._sbrk:00000000 $t
          syscalls.s:24     .text._sbrk:00000000 _sbrk
          syscalls.s:73     .text._sbrk:00000038 $d
          syscalls.s:406    .bss:00000000 heap.5925
          syscalls.s:79     .text.link:00000000 $t
          syscalls.s:84     .text.link:00000000 link
          syscalls.s:113    .text._close:00000000 $t
          syscalls.s:118    .text._close:00000000 _close
          syscalls.s:146    .text._fstat:00000000 $t
          syscalls.s:151    .text._fstat:00000000 _fstat
          syscalls.s:184    .text._isatty:00000000 $t
          syscalls.s:189    .text._isatty:00000000 _isatty
          syscalls.s:217    .text._lseek:00000000 $t
          syscalls.s:222    .text._lseek:00000000 _lseek
          syscalls.s:252    .text._read:00000000 $t
          syscalls.s:257    .text._read:00000000 _read
          syscalls.s:320    .text._read:0000004c $d
          syscalls.s:325    .text._write:00000000 $t
          syscalls.s:330    .text._write:00000000 _write
          syscalls.s:381    .text.abort:00000000 $t
          syscalls.s:386    .text.abort:00000000 abort
          syscalls.s:405    .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
_end
__io_getchar
USART_GetFlagStatus
__io_putchar
